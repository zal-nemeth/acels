import numpy as np

Fx = np.array(
    [
        -3.4e-10,
        -1.8e-10,
        3.1e-10,
        -9.4e-12,
        2.9e-10,
        -1.4e-12,
        1.7e-10,
        1.3e-11,
        2.3e-10,
        -4.3e-11,
        2.5e-11,
        1.4e-10,
        -1.3e-10,
        -3.6e-11,
        5.2e-11,
        1e-10,
        0.052,
        0.048,
        0.045,
        0.042,
        0.038,
        0.035,
        0.033,
        0.03,
        0.028,
        0.025,
        0.023,
        0.021,
        0.019,
        0.018,
        0.016,
        0.015,
        0.1,
        0.097,
        0.09,
        0.083,
        0.077,
        0.071,
        0.065,
        0.06,
        0.055,
        0.05,
        0.046,
        0.042,
        0.039,
        0.036,
        0.033,
        0.03,
        0.16,
        0.14,
        0.13,
        0.12,
        0.11,
        0.11,
        0.097,
        0.089,
        0.082,
        0.075,
        0.069,
        0.063,
        0.058,
        0.053,
        0.049,
        0.045,
        0.21,
        0.19,
        0.18,
        0.17,
        0.15,
        0.14,
        0.13,
        0.12,
        0.11,
        0.1,
        0.091,
        0.084,
        0.077,
        0.07,
        0.065,
        0.059,
        0.26,
        0.24,
        0.22,
        0.21,
        0.19,
        0.17,
        0.16,
        0.15,
        0.13,
        0.12,
        0.11,
        0.1,
        0.095,
        0.087,
        0.08,
        0.073,
        0.31,
        0.29,
        0.27,
        0.25,
        0.23,
        0.21,
        0.19,
        0.17,
        0.16,
        0.15,
        0.13,
        0.12,
        0.11,
        0.1,
        0.095,
        0.087,
        0.36,
        0.34,
        0.31,
        0.28,
        0.26,
        0.24,
        0.22,
        0.2,
        0.18,
        0.17,
        0.15,
        0.14,
        0.13,
        0.12,
        0.11,
        0.1,
        0.41,
        0.38,
        0.35,
        0.32,
        0.3,
        0.27,
        0.25,
        0.23,
        0.21,
        0.19,
        0.17,
        0.16,
        0.15,
        0.13,
        0.12,
        0.11,
        0.46,
        0.43,
        0.39,
        0.36,
        0.33,
        0.3,
        0.28,
        0.25,
        0.23,
        0.21,
        0.19,
        0.18,
        0.16,
        0.15,
        0.14,
        0.12,
        0.51,
        0.47,
        0.43,
        0.39,
        0.36,
        0.33,
        0.3,
        0.27,
        0.25,
        0.23,
        0.21,
        0.19,
        0.18,
        0.16,
        0.15,
        0.14,
        0.56,
        0.51,
        0.47,
        0.42,
        0.39,
        0.35,
        0.32,
        0.3,
        0.27,
        0.25,
        0.23,
        0.21,
        0.19,
        0.17,
        0.16,
        0.15,
        0.6,
        0.55,
        0.5,
        0.45,
        0.41,
        0.38,
        0.34,
        0.31,
        0.29,
        0.26,
        0.24,
        0.22,
        0.2,
        0.19,
        0.17,
        0.16,
        0.64,
        0.58,
        0.53,
        0.48,
        0.44,
        0.4,
        0.36,
        0.33,
        0.3,
        0.28,
        0.25,
        0.23,
        0.21,
        0.2,
        0.18,
        0.16,
        0.67,
        0.61,
        0.55,
        0.5,
        0.46,
        0.42,
        0.38,
        0.35,
        0.32,
        0.29,
        0.26,
        0.24,
        0.22,
        0.2,
        0.19,
        0.17,
        0.7,
        0.63,
        0.57,
        0.52,
        0.47,
        0.43,
        0.39,
        0.36,
        0.33,
        0.3,
        0.27,
        0.25,
        0.23,
        0.21,
        0.19,
        0.18,
        0.72,
        0.65,
        0.59,
        0.54,
        0.49,
        0.44,
        0.4,
        0.37,
        0.34,
        0.31,
        0.28,
        0.26,
        0.24,
        0.22,
        0.2,
        0.18,
        0.74,
        0.67,
        0.6,
        0.55,
        0.5,
        0.45,
        0.41,
        0.38,
        0.34,
        0.31,
        0.29,
        0.26,
        0.24,
        0.22,
        0.21,
        0.19,
        0.74,
        0.67,
        0.61,
        0.55,
        0.5,
        0.46,
        0.42,
        0.38,
        0.35,
        0.32,
        0.29,
        0.27,
        0.25,
        0.23,
        0.21,
        0.19,
        0.75,
        0.67,
        0.61,
        0.56,
        0.5,
        0.46,
        0.42,
        0.38,
        0.35,
        0.32,
        0.3,
        0.27,
        0.25,
        0.23,
        0.21,
        0.19,
        0.74,
        0.67,
        0.61,
        0.55,
        0.5,
        0.46,
        0.42,
        0.38,
        0.35,
        0.32,
        0.3,
        0.27,
        0.25,
        0.23,
        0.21,
        0.2,
    ]
)
Fy = np.array(
    [
        5.3e-12,
        -1.1e-12,
        -5.7e-11,
        -1.3e-11,
        -2.4e-11,
        2.4e-13,
        1.9e-12,
        -2.5e-12,
        -3.5e-13,
        -1.3e-11,
        -1e-11,
        8.5e-13,
        -9.5e-12,
        1.5e-11,
        9.4e-12,
        -7.7e-12,
        -2.8e-11,
        7.1e-12,
        2.5e-11,
        2.6e-11,
        1.6e-11,
        2.3e-11,
        6.5e-12,
        -2.6e-11,
        4e-12,
        1.4e-11,
        -2.8e-12,
        -4.7e-13,
        -5.5e-12,
        -1.6e-11,
        -9.1e-12,
        1.3e-11,
        6.6e-11,
        2.7e-11,
        -1.8e-11,
        -1.4e-11,
        1.5e-10,
        -1.8e-10,
        -1e-10,
        1.6e-11,
        1.1e-10,
        7.9e-11,
        4.8e-11,
        -2.8e-11,
        5.8e-11,
        -3.2e-11,
        -1.9e-11,
        -3.3e-11,
        5.4e-11,
        7.5e-12,
        -2.2e-11,
        2e-11,
        2.8e-11,
        -2.9e-11,
        -7.2e-12,
        -6.4e-12,
        -5.7e-13,
        7.3e-12,
        1.1e-11,
        -1.5e-11,
        1.3e-11,
        -5.8e-12,
        -5.1e-13,
        1.3e-12,
        -4.8e-11,
        -1.9e-11,
        1.4e-11,
        -3.1e-11,
        7.7e-12,
        3.3e-11,
        2.7e-11,
        -1.4e-12,
        -4.3e-12,
        5.4e-12,
        8.1e-12,
        1.6e-11,
        3.8e-11,
        -1.9e-12,
        2.3e-12,
        -1.9e-11,
        2.5e-11,
        -3.5e-11,
        -2.3e-11,
        3.4e-11,
        -3.3e-11,
        -9.3e-12,
        -7.3e-12,
        -3e-11,
        3.6e-12,
        -7.6e-12,
        -1.8e-11,
        3.6e-12,
        5.3e-12,
        1.3e-11,
        1e-11,
        -2.1e-12,
        3.9e-12,
        1.3e-11,
        2.4e-11,
        4.3e-12,
        4e-12,
        7.7e-12,
        -9.9e-12,
        1.3e-11,
        -5.4e-12,
        -5.8e-12,
        -7.5e-12,
        1.4e-12,
        1.2e-11,
        2.4e-13,
        -2e-12,
        6.1e-12,
        -2.3e-11,
        6.9e-12,
        2.7e-12,
        2.1e-11,
        -2.3e-11,
        -3e-11,
        2.9e-12,
        1.6e-11,
        1e-11,
        -1.9e-11,
        -1.1e-11,
        -3.5e-12,
        -1.4e-12,
        -1.4e-11,
        3.1e-12,
        5.8e-13,
        -8.6e-11,
        3.2e-11,
        -1.4e-10,
        1.1e-10,
        7.5e-11,
        -7.1e-11,
        5.4e-11,
        -9.6e-11,
        1.4e-11,
        6.9e-11,
        -1.1e-11,
        -3.3e-11,
        2.7e-11,
        -3.1e-11,
        3.3e-11,
        -4.5e-11,
        7.5e-12,
        -8.6e-12,
        1.3e-11,
        -5.8e-11,
        4.2e-12,
        2.2e-11,
        -7.2e-12,
        1.9e-11,
        1.5e-11,
        -1.9e-11,
        2.4e-12,
        4.1e-12,
        -6.9e-12,
        -3.1e-11,
        1.2e-12,
        6.3e-12,
        1.7e-11,
        1.4e-11,
        1.5e-11,
        2.9e-11,
        -1e-11,
        1.6e-11,
        -3.8e-11,
        1.4e-11,
        1.5e-12,
        2.2e-12,
        6.8e-13,
        6.3e-12,
        -1.1e-11,
        2e-11,
        7.7e-12,
        2.6e-12,
        -3.1e-11,
        -6.9e-12,
        6.9e-12,
        1.7e-11,
        -1.7e-11,
        -3e-11,
        -6.3e-12,
        1.4e-11,
        -1.7e-14,
        -8.4e-12,
        7e-12,
        -6e-12,
        -1.4e-11,
        -2.7e-12,
        -6.8e-12,
        7.7e-12,
        3.3e-11,
        -2.4e-10,
        -2e-10,
        -4e-11,
        9.5e-11,
        -1.6e-10,
        -4.7e-11,
        -9e-11,
        -1.3e-11,
        4.6e-11,
        -6.2e-12,
        1.9e-11,
        2.1e-11,
        1.9e-11,
        2.4e-11,
        -7.4e-13,
        4.3e-11,
        -7.7e-12,
        -3.6e-11,
        1.5e-11,
        5.6e-12,
        -9.5e-12,
        1.2e-11,
        2.3e-11,
        5.2e-13,
        7.7e-12,
        2.2e-12,
        3.6e-12,
        -3e-12,
        -2.1e-11,
        -6.7e-12,
        3.1e-13,
        2.2e-11,
        4.3e-12,
        -2.1e-11,
        -2.8e-11,
        1.3e-11,
        -8.2e-12,
        -1.2e-11,
        1.6e-11,
        1.8e-11,
        7.3e-12,
        9.7e-12,
        -9.2e-12,
        -4.6e-12,
        -4.2e-12,
        1.7e-12,
        1e-11,
        2e-11,
        1.4e-11,
        -4.1e-11,
        -1.8e-11,
        -3.6e-11,
        1.7e-11,
        1.4e-11,
        1.7e-11,
        -4.2e-13,
        -1.7e-12,
        9e-12,
        -5.2e-12,
        -6.2e-12,
        -1.3e-11,
        1.2e-11,
        5.4e-12,
        -3.6e-13,
        -1.6e-12,
        -1.2e-11,
        1.5e-11,
        -1.3e-11,
        2e-11,
        -2.5e-12,
        -9.7e-12,
        2.5e-13,
        3.7e-12,
        1.6e-11,
        7.4e-12,
        1.8e-11,
        -2.6e-11,
        1.5e-12,
        -1.2e-11,
        -4.1e-11,
        3.6e-13,
        2.7e-11,
        2.6e-12,
        -2.2e-12,
        4.1e-12,
        -3.9e-12,
        1.9e-11,
        -1.2e-11,
        9.9e-13,
        -9.3e-12,
        8.6e-12,
        -7.7e-12,
        -4.2e-12,
        -1.7e-12,
        5.6e-13,
        -3e-11,
        -1.1e-11,
        -4.4e-11,
        -2.1e-11,
        5.7e-13,
        2.6e-11,
        1.1e-11,
        -1.5e-11,
        -8.1e-12,
        1.3e-11,
        2.1e-12,
        6.6e-12,
        -9.9e-12,
        -4.5e-13,
        -4.1e-12,
        9e-12,
        -1.5e-11,
        1.9e-11,
        -1.3e-11,
        -1.3e-11,
        3.5e-12,
        -1.2e-11,
        -6e-12,
        -1.6e-11,
        -2e-11,
        -8.1e-12,
        1.8e-11,
        9.2e-12,
        -2.2e-11,
        6.9e-13,
        -1.4e-11,
        -2.2e-11,
        4.7e-13,
        -1.1e-11,
        -4.7e-13,
        -3.1e-12,
        1.1e-11,
        1.6e-12,
        -2.3e-11,
        6.8e-12,
        2.4e-12,
        -7.3e-12,
        3.2e-12,
        -7.7e-12,
        -1.6e-11,
        -4.3e-14,
        -2.6e-12,
        -3.2e-12,
    ]
)
Fz = np.array(
    [
        1.317,
        1.217,
        1.124,
        1.037,
        0.957,
        0.883,
        0.815,
        0.753,
        0.695,
        0.642,
        0.594,
        0.549,
        0.509,
        0.471,
        0.437,
        0.406,
        1.315,
        1.215,
        1.122,
        1.036,
        0.956,
        0.882,
        0.814,
        0.751,
        0.694,
        0.641,
        0.593,
        0.548,
        0.508,
        0.471,
        0.436,
        0.405,
        1.31,
        1.21,
        1.117,
        1.031,
        0.951,
        0.877,
        0.81,
        0.747,
        0.69,
        0.638,
        0.59,
        0.546,
        0.505,
        0.468,
        0.434,
        0.403,
        1.302,
        1.202,
        1.109,
        1.023,
        0.943,
        0.87,
        0.803,
        0.741,
        0.684,
        0.632,
        0.585,
        0.541,
        0.501,
        0.464,
        0.431,
        0.4,
        1.289,
        1.189,
        1.097,
        1.011,
        0.932,
        0.86,
        0.793,
        0.732,
        0.676,
        0.625,
        0.578,
        0.535,
        0.495,
        0.459,
        0.426,
        0.395,
        1.273,
        1.173,
        1.081,
        0.996,
        0.918,
        0.847,
        0.781,
        0.721,
        0.666,
        0.615,
        0.569,
        0.527,
        0.488,
        0.452,
        0.42,
        0.39,
        1.253,
        1.153,
        1.062,
        0.978,
        0.901,
        0.83,
        0.766,
        0.707,
        0.653,
        0.603,
        0.558,
        0.517,
        0.479,
        0.444,
        0.412,
        0.383,
        1.227,
        1.129,
        1.038,
        0.956,
        0.88,
        0.811,
        0.748,
        0.69,
        0.638,
        0.589,
        0.545,
        0.505,
        0.468,
        0.434,
        0.403,
        0.375,
        1.197,
        1.1,
        1.011,
        0.93,
        0.856,
        0.789,
        0.727,
        0.671,
        0.62,
        0.574,
        0.531,
        0.492,
        0.456,
        0.423,
        0.393,
        0.366,
        1.162,
        1.066,
        0.979,
        0.901,
        0.829,
        0.764,
        0.704,
        0.65,
        0.601,
        0.556,
        0.515,
        0.477,
        0.443,
        0.411,
        0.382,
        0.356,
        1.121,
        1.028,
        0.944,
        0.867,
        0.798,
        0.736,
        0.679,
        0.627,
        0.579,
        0.536,
        0.497,
        0.461,
        0.428,
        0.398,
        0.37,
        0.344,
        1.074,
        0.985,
        0.904,
        0.831,
        0.765,
        0.705,
        0.65,
        0.601,
        0.556,
        0.515,
        0.478,
        0.443,
        0.412,
        0.383,
        0.357,
        0.332,
        1.022,
        0.937,
        0.86,
        0.79,
        0.728,
        0.671,
        0.62,
        0.573,
        0.531,
        0.492,
        0.457,
        0.424,
        0.395,
        0.368,
        0.343,
        0.32,
        0.965,
        0.884,
        0.812,
        0.747,
        0.688,
        0.636,
        0.588,
        0.544,
        0.504,
        0.468,
        0.435,
        0.405,
        0.377,
        0.351,
        0.328,
        0.306,
        0.902,
        0.827,
        0.761,
        0.701,
        0.647,
        0.598,
        0.553,
        0.513,
        0.476,
        0.443,
        0.412,
        0.384,
        0.358,
        0.334,
        0.312,
        0.292,
        0.835,
        0.767,
        0.706,
        0.652,
        0.603,
        0.558,
        0.518,
        0.481,
        0.447,
        0.416,
        0.388,
        0.362,
        0.338,
        0.316,
        0.296,
        0.277,
        0.764,
        0.704,
        0.65,
        0.601,
        0.557,
        0.517,
        0.481,
        0.447,
        0.417,
        0.389,
        0.363,
        0.34,
        0.318,
        0.298,
        0.279,
        0.262,
        0.691,
        0.638,
        0.591,
        0.549,
        0.51,
        0.475,
        0.443,
        0.413,
        0.386,
        0.361,
        0.338,
        0.317,
        0.297,
        0.279,
        0.262,
        0.247,
        0.615,
        0.572,
        0.532,
        0.496,
        0.463,
        0.433,
        0.405,
        0.379,
        0.355,
        0.333,
        0.313,
        0.294,
        0.277,
        0.26,
        0.245,
        0.231,
        0.54,
        0.505,
        0.472,
        0.443,
        0.415,
        0.39,
        0.366,
        0.345,
        0.324,
        0.305,
        0.288,
        0.271,
        0.256,
        0.242,
        0.228,
        0.215,
        0.465,
        0.438,
        0.413,
        0.39,
        0.368,
        0.348,
        0.329,
        0.311,
        0.294,
        0.278,
        0.263,
        0.248,
        0.235,
        0.223,
        0.211,
        0.2,
    ]
)
Tx = np.array(
    [
        3.7e-10,
        -4.7e-10,
        1.4e-10,
        -3.3e-10,
        7.1e-11,
        -1.5e-10,
        6.3e-10,
        -1.7e-10,
        2.7e-10,
        3.5e-11,
        1.6e-10,
        3.6e-10,
        -2.2e-10,
        1e-10,
        -4.1e-11,
        1.6e-11,
        3.5e-10,
        5.2e-10,
        1e-17,
        -2.1e-10,
        4.5e-10,
        -1.3e-09,
        2.7e-10,
        3.3e-10,
        -2.7e-10,
        9e-10,
        -1.3e-10,
        9.5e-10,
        -2.8e-10,
        -5.6e-10,
        -1e-09,
        -4.6e-10,
        8.1e-10,
        -5.3e-10,
        1e-09,
        2.3e-10,
        -2.9e-09,
        1.5e-09,
        3e-09,
        2.6e-10,
        -2.6e-09,
        2.1e-09,
        3.6e-11,
        -3.7e-10,
        -2e-09,
        -7.8e-10,
        -3.1e-10,
        2.1e-09,
        -4.5e-11,
        -3e-10,
        4.8e-10,
        -4.4e-10,
        -1.5e-10,
        -3.7e-10,
        -1.7e-10,
        2e-10,
        3.2e-10,
        8.5e-11,
        4.3e-11,
        -1.8e-10,
        7.6e-11,
        -3.5e-10,
        1.9e-10,
        4.6e-10,
        6.3e-10,
        9.5e-10,
        1.1e-09,
        -1.6e-10,
        7.8e-11,
        -2.3e-10,
        8.8e-11,
        -2.6e-10,
        -1.9e-10,
        -7.9e-10,
        4.8e-10,
        5.9e-10,
        2.5e-10,
        3.9e-10,
        -1.5e-10,
        -6.3e-10,
        -1.1e-09,
        -1.3e-10,
        4.8e-10,
        -6.8e-10,
        5.2e-10,
        1.6e-10,
        3.1e-10,
        3.7e-10,
        7.4e-10,
        -2e-10,
        -1.6e-10,
        -4.6e-10,
        -1.5e-10,
        5.4e-10,
        -3.3e-10,
        -5.7e-10,
        -5.6e-10,
        2.3e-10,
        -6e-10,
        1.9e-11,
        1e-09,
        1.6e-10,
        5.9e-10,
        -6.7e-10,
        3.9e-10,
        3.1e-11,
        7.2e-10,
        -2.3e-11,
        -4e-10,
        5.7e-10,
        9.8e-10,
        -3.8e-10,
        -3.8e-10,
        -2.5e-10,
        2.8e-10,
        2.3e-11,
        4.2e-10,
        -1.4e-10,
        4.5e-10,
        2.5e-10,
        4.3e-10,
        2.8e-11,
        -2.3e-10,
        5.2e-12,
        -4e-11,
        -2.9e-11,
        -9.1e-11,
        1.5e-11,
        -5.8e-10,
        -2.3e-09,
        8.3e-09,
        -2e-09,
        -2.5e-09,
        2.1e-09,
        -4.9e-09,
        -2.7e-09,
        -6.4e-10,
        2.9e-09,
        -2.9e-09,
        4.5e-10,
        7e-09,
        2.3e-09,
        9.9e-09,
        2.9e-09,
        6.4e-10,
        -3.9e-10,
        8.3e-10,
        2.9e-10,
        -2.5e-10,
        4e-10,
        -2.9e-11,
        -8.5e-11,
        -5.4e-11,
        -2e-10,
        2.9e-10,
        9.7e-10,
        3.1e-10,
        1.1e-09,
        -4e-10,
        2.3e-11,
        -3.2e-10,
        2.8e-11,
        -6.9e-12,
        2.9e-10,
        1.8e-10,
        -4.4e-10,
        1.6e-10,
        1.3e-10,
        1.1e-10,
        -1.1e-10,
        8e-11,
        2.5e-10,
        -1.4e-10,
        8.6e-11,
        -4.8e-11,
        -2e-10,
        -2.2e-10,
        -1.1e-10,
        3.2e-10,
        -5.2e-10,
        -4.4e-10,
        4.2e-11,
        -2.3e-10,
        -1.8e-10,
        -3.1e-10,
        4.3e-11,
        1.2e-10,
        7.5e-11,
        -7.2e-11,
        -1e-10,
        -2.9e-10,
        1.7e-10,
        -1.6e-09,
        -3.1e-10,
        -2.6e-09,
        1.4e-09,
        -8.8e-10,
        2.6e-10,
        1.5e-09,
        2.7e-10,
        -7.6e-10,
        -2.5e-09,
        -9.5e-10,
        -3.5e-09,
        -8.3e-10,
        6e-10,
        3.9e-09,
        2.7e-09,
        -1.9e-10,
        1.8e-10,
        1.1e-10,
        5.2e-10,
        3.7e-10,
        -4.5e-10,
        -8.3e-11,
        2.6e-10,
        8.3e-11,
        -3.6e-11,
        4.3e-11,
        -6.4e-11,
        9.5e-12,
        -4.4e-10,
        8.7e-11,
        1.2e-10,
        -3.2e-10,
        -4.7e-11,
        2e-10,
        -2.1e-10,
        3e-10,
        -1.3e-10,
        -1.6e-10,
        5.2e-11,
        -3.8e-11,
        1.3e-10,
        -2.9e-10,
        -1.8e-10,
        1.1e-10,
        -9.8e-11,
        8.1e-11,
        1.2e-10,
        -1.4e-10,
        1.3e-10,
        -2.9e-10,
        1.2e-10,
        -2.7e-10,
        -6e-10,
        1.9e-10,
        -3.3e-11,
        7.2e-10,
        -4.1e-10,
        4.4e-10,
        -6.3e-10,
        -1.3e-10,
        1.2e-10,
        -3.7e-10,
        9.5e-10,
        8.7e-11,
        5.4e-10,
        6.2e-10,
        8.3e-11,
        4.3e-10,
        6.6e-11,
        1.8e-10,
        1.7e-10,
        -4.6e-10,
        -6.2e-10,
        3.5e-10,
        -2.2e-10,
        -1.2e-10,
        -7.2e-11,
        3.1e-10,
        -2.7e-10,
        1.7e-10,
        1.2e-10,
        2.9e-11,
        5.4e-11,
        -3.5e-11,
        -3.3e-11,
        -1.4e-10,
        5.9e-11,
        -2.8e-10,
        -2.4e-10,
        -2.3e-10,
        -8.7e-13,
        8.5e-11,
        2e-11,
        9.4e-11,
        4.9e-11,
        1.3e-09,
        -2.1e-10,
        5.2e-10,
        -9.6e-10,
        -7.9e-10,
        5.8e-10,
        -1.7e-10,
        9.3e-10,
        3e-10,
        -2.7e-10,
        -1.9e-10,
        -5.3e-10,
        -7.7e-10,
        5.4e-10,
        2.1e-11,
        -9.4e-10,
        -2.3e-10,
        1.4e-10,
        -1.6e-10,
        4.9e-10,
        1e-17,
        8e-10,
        5.1e-10,
        -2.2e-10,
        1e-10,
        -9.7e-11,
        -1.1e-10,
        1.4e-10,
        3.8e-10,
        2.6e-10,
        4.7e-10,
        -2.3e-10,
        -1.9e-10,
        -6.8e-11,
        -6.2e-11,
        -9.4e-11,
        -1.3e-11,
        1.8e-10,
        -2.4e-10,
        1.2e-11,
        9.2e-11,
        -2.4e-10,
        2.7e-11,
        1.1e-11,
        -1.1e-10,
        4.3e-11,
        1.4e-10,
        1e-10,
    ]
)
Ty = np.array(
    [
        5.4e-10,
        4.2e-11,
        -2.1e-09,
        4.8e-10,
        -2.5e-09,
        3.6e-10,
        -1.6e-09,
        -7.5e-11,
        -2.5e-09,
        5.4e-10,
        -6.9e-10,
        -1.8e-09,
        1.8e-09,
        6.7e-10,
        -9e-10,
        -1.9e-09,
        1.2,
        1.0,
        0.89,
        0.78,
        0.68,
        0.59,
        0.51,
        0.45,
        0.39,
        0.34,
        0.29,
        0.25,
        0.22,
        0.19,
        0.16,
        0.14,
        2.3,
        2.0,
        1.8,
        1.5,
        1.3,
        1.2,
        1.0,
        0.89,
        0.77,
        0.67,
        0.58,
        0.5,
        0.44,
        0.38,
        0.33,
        0.28,
        3.4,
        3.0,
        2.6,
        2.3,
        2.0,
        1.7,
        1.5,
        1.3,
        1.1,
        0.99,
        0.86,
        0.75,
        0.65,
        0.56,
        0.49,
        0.42,
        4.5,
        4.0,
        3.4,
        3.0,
        2.6,
        2.3,
        2.0,
        1.7,
        1.5,
        1.3,
        1.1,
        0.98,
        0.85,
        0.73,
        0.64,
        0.55,
        5.5,
        4.8,
        4.2,
        3.7,
        3.2,
        2.8,
        2.4,
        2.1,
        1.8,
        1.6,
        1.4,
        1.2,
        1.0,
        0.9,
        0.78,
        0.67,
        6.5,
        5.7,
        4.9,
        4.3,
        3.7,
        3.3,
        2.8,
        2.5,
        2.1,
        1.9,
        1.6,
        1.4,
        1.2,
        1.0,
        0.91,
        0.78,
        7.4,
        6.4,
        5.6,
        4.9,
        4.2,
        3.7,
        3.2,
        2.8,
        2.4,
        2.1,
        1.8,
        1.6,
        1.4,
        1.2,
        1.0,
        0.88,
        8.2,
        7.1,
        6.2,
        5.4,
        4.7,
        4.0,
        3.5,
        3.1,
        2.6,
        2.3,
        2.0,
        1.7,
        1.5,
        1.3,
        1.1,
        0.97,
        8.8,
        7.7,
        6.7,
        5.8,
        5.0,
        4.4,
        3.8,
        3.3,
        2.8,
        2.5,
        2.1,
        1.9,
        1.6,
        1.4,
        1.2,
        1.0,
        9.4,
        8.1,
        7.1,
        6.1,
        5.3,
        4.6,
        4.0,
        3.5,
        3.0,
        2.6,
        2.3,
        2.0,
        1.7,
        1.5,
        1.3,
        1.1,
        9.8,
        8.5,
        7.3,
        6.4,
        5.5,
        4.8,
        4.1,
        3.6,
        3.1,
        2.7,
        2.3,
        2.0,
        1.8,
        1.5,
        1.3,
        1.1,
        10.0,
        8.7,
        7.5,
        6.5,
        5.6,
        4.9,
        4.2,
        3.7,
        3.2,
        2.8,
        2.4,
        2.1,
        1.8,
        1.6,
        1.3,
        1.2,
        10.0,
        8.7,
        7.6,
        6.5,
        5.7,
        4.9,
        4.3,
        3.7,
        3.2,
        2.8,
        2.4,
        2.1,
        1.8,
        1.6,
        1.4,
        1.2,
        10.0,
        8.7,
        7.5,
        6.5,
        5.6,
        4.9,
        4.2,
        3.7,
        3.2,
        2.8,
        2.4,
        2.1,
        1.8,
        1.6,
        1.4,
        1.2,
        9.8,
        8.5,
        7.3,
        6.3,
        5.5,
        4.8,
        4.1,
        3.6,
        3.1,
        2.7,
        2.4,
        2.0,
        1.8,
        1.5,
        1.3,
        1.1,
        9.4,
        8.1,
        7.0,
        6.1,
        5.3,
        4.6,
        4.0,
        3.5,
        3.0,
        2.6,
        2.3,
        2.0,
        1.7,
        1.5,
        1.3,
        1.1,
        8.9,
        7.7,
        6.7,
        5.8,
        5.0,
        4.4,
        3.8,
        3.3,
        2.9,
        2.5,
        2.2,
        1.9,
        1.6,
        1.4,
        1.2,
        1.0,
        8.2,
        7.1,
        6.2,
        5.4,
        4.7,
        4.1,
        3.6,
        3.1,
        2.7,
        2.3,
        2.0,
        1.8,
        1.5,
        1.3,
        1.1,
        0.98,
        7.4,
        6.5,
        5.6,
        4.9,
        4.3,
        3.7,
        3.3,
        2.8,
        2.5,
        2.2,
        1.9,
        1.6,
        1.4,
        1.2,
        1.0,
        0.9,
        6.6,
        5.8,
        5.0,
        4.4,
        3.9,
        3.4,
        2.9,
        2.6,
        2.2,
        1.9,
        1.7,
        1.5,
        1.3,
        1.1,
        0.94,
        0.8,
    ]
)

r = np.array(
    [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        4,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        14,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        15,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        16,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        17,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
        20,
    ]
)
z_sim = np.array(
    [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
    ]
)

# Creating the points array
points = np.column_stack((r, z_sim))


def precompute_for_values(values):
    # Compute the centroid
    centroid = np.mean(points, axis=0)

    # Compute angles and sort index
    angles = np.arctan2(points[:, 1] - centroid[1], points[:, 0] - centroid[0])
    sort_idx = np.argsort(angles)

    # Compute regression coefficients (linear regression model)
    X = np.hstack([np.ones((points.shape[0], 1)), points])
    beta = np.linalg.inv(X.T @ X) @ (X.T @ values)

    return centroid, sort_idx, beta


# Precompute for each set of values
precomputed_fx = precompute_for_values(Fx)
precomputed_fy = precompute_for_values(Fy)
precomputed_fz = precompute_for_values(Fz)
precomputed_tx = precompute_for_values(Tx)
precomputed_ty = precompute_for_values(Ty)

# Outputting the precomputed values
precomputed_values = {
    "Fx": precomputed_fx,
    "Fy": precomputed_fy,
    "Fz": precomputed_fz,
    "Tx": precomputed_tx,
    "Ty": precomputed_ty,
}

# Example of how to access and print the values
for key, (centroid, sort_idx, beta) in precomputed_values.items():
    print(f"{key}:")
    print(f"  Centroid: {centroid}")
    print(f"  Sort Index: {sort_idx}")
    print(f"  Beta: {beta}\n")

# You can convert this print output to a format that's easy to copy into MATLAB
output_format = {}

for label, (centroid, sort_idx, beta) in zip(
    ["Fx", "Fy", "Fz", "Tx", "Ty"],
    [precomputed_fx, precomputed_fy, precomputed_fz, precomputed_tx, precomputed_ty],
):
    output_format[label] = {
        "centroid": centroid.tolist(),
        "sort_idx": (sort_idx + 1).tolist(),  # +1 for MATLAB indexing
        "beta": beta.tolist(),
    }

print(output_format)
